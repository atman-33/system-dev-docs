// <auto-generated />
using System;
using DDDSampleApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDSampleApp.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.Member", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("position");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Position")
                        .IsUnique();

                    b.ToTable("members");

                    b.HasData(
                        new
                        {
                            Id = "89fb5db5-5222-4fac-9ac2-452d81a654f9",
                            CreatedAt = new DateTime(2024, 7, 23, 23, 19, 9, 618, DateTimeKind.Local).AddTicks(2472),
                            Name = "Aさん",
                            Position = "リーダー",
                            UpdatedAt = new DateTime(2024, 7, 23, 23, 19, 9, 618, DateTimeKind.Local).AddTicks(2482)
                        },
                        new
                        {
                            Id = "73e9bafb-80ea-4829-9e93-eabe999d0b9d",
                            CreatedAt = new DateTime(2024, 7, 23, 23, 19, 9, 618, DateTimeKind.Local).AddTicks(2497),
                            Name = "Bさん",
                            Position = "メンバー",
                            UpdatedAt = new DateTime(2024, 7, 23, 23, 19, 9, 618, DateTimeKind.Local).AddTicks(2498)
                        });
                });

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.Todo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("TEXT")
                        .HasColumnName("deadline");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("member_id");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.Property<string>("TodoTypeId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("todo_type_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TodoTypeId");

                    b.ToTable("todos");
                });

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.TodoType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("todo_types");

                    b.HasData(
                        new
                        {
                            Id = "931b3142-78b0-4680-a733-fd659d58b7e7",
                            CreatedAt = new DateTime(2024, 7, 23, 23, 19, 9, 618, DateTimeKind.Local).AddTicks(2532),
                            Name = "プライベート",
                            UpdatedAt = new DateTime(2024, 7, 23, 23, 19, 9, 618, DateTimeKind.Local).AddTicks(2533)
                        },
                        new
                        {
                            Id = "7347956e-cb5f-4657-8548-be2c1c40bdf2",
                            CreatedAt = new DateTime(2024, 7, 23, 23, 19, 9, 618, DateTimeKind.Local).AddTicks(2538),
                            Name = "仕事",
                            UpdatedAt = new DateTime(2024, 7, 23, 23, 19, 9, 618, DateTimeKind.Local).AddTicks(2538)
                        });
                });

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.Todo", b =>
                {
                    b.HasOne("DDDSampleApp.Infrastructure.Models.Member", "Member")
                        .WithMany("Todos")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDDSampleApp.Infrastructure.Models.TodoType", "TodoType")
                        .WithMany()
                        .HasForeignKey("TodoTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("TodoType");
                });

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.Member", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
