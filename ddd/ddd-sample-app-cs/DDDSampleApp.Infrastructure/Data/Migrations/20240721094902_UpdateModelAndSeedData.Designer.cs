// <auto-generated />
using System;
using DDDSampleApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDSampleApp.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240721094902_UpdateModelAndSeedData")]
    partial class UpdateModelAndSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.Member", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("position");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Position")
                        .IsUnique();

                    b.ToTable("members");

                    b.HasData(
                        new
                        {
                            Id = "cae93eb1-f9a1-40ae-908a-683662e76e2d",
                            CreatedAt = new DateTime(2024, 7, 21, 18, 49, 2, 443, DateTimeKind.Local).AddTicks(8566),
                            Name = "Aさん",
                            Position = "A",
                            UpdatedAt = new DateTime(2024, 7, 21, 18, 49, 2, 443, DateTimeKind.Local).AddTicks(8576)
                        },
                        new
                        {
                            Id = "6c50e648-bdf3-40e4-ab83-d26da5aca141",
                            CreatedAt = new DateTime(2024, 7, 21, 18, 49, 2, 443, DateTimeKind.Local).AddTicks(8584),
                            Name = "Bさん",
                            Position = "B",
                            UpdatedAt = new DateTime(2024, 7, 21, 18, 49, 2, 443, DateTimeKind.Local).AddTicks(8585)
                        });
                });

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.Todo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("TEXT")
                        .HasColumnName("deadline");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("member_id");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.Property<string>("TodoTypeId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("todo_type_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TodoTypeId");

                    b.ToTable("todos");
                });

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.TodoType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("todo_types");

                    b.HasData(
                        new
                        {
                            Id = "456ad9e2-0972-402a-8552-657b96741e70",
                            CreatedAt = new DateTime(2024, 7, 21, 18, 49, 2, 443, DateTimeKind.Local).AddTicks(8622),
                            Name = "プライベート",
                            UpdatedAt = new DateTime(2024, 7, 21, 18, 49, 2, 443, DateTimeKind.Local).AddTicks(8622)
                        },
                        new
                        {
                            Id = "b53edfe0-fd6a-4b87-94b7-7efda8a90ae3",
                            CreatedAt = new DateTime(2024, 7, 21, 18, 49, 2, 443, DateTimeKind.Local).AddTicks(8628),
                            Name = "仕事",
                            UpdatedAt = new DateTime(2024, 7, 21, 18, 49, 2, 443, DateTimeKind.Local).AddTicks(8629)
                        });
                });

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.Todo", b =>
                {
                    b.HasOne("DDDSampleApp.Infrastructure.Models.Member", "Member")
                        .WithMany("Todos")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDDSampleApp.Infrastructure.Models.TodoType", "TodoType")
                        .WithMany()
                        .HasForeignKey("TodoTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("TodoType");
                });

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.Member", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
