// <auto-generated />
using System;
using DDDSampleApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDSampleApp.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240725140045_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.Member", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("position");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Position")
                        .IsUnique();

                    b.ToTable("members");

                    b.HasData(
                        new
                        {
                            Id = "ca9e97df-e931-49cb-93f1-926f96902c02",
                            CreatedAt = new DateTime(2024, 7, 25, 23, 0, 44, 930, DateTimeKind.Local).AddTicks(936),
                            Name = "Aさん",
                            Position = "リーダー",
                            UpdatedAt = new DateTime(2024, 7, 25, 23, 0, 44, 930, DateTimeKind.Local).AddTicks(956)
                        },
                        new
                        {
                            Id = "63f1d2f1-12a6-45c2-b48e-fa4a81b6484e",
                            CreatedAt = new DateTime(2024, 7, 25, 23, 0, 44, 930, DateTimeKind.Local).AddTicks(962),
                            Name = "Bさん",
                            Position = "メンバー",
                            UpdatedAt = new DateTime(2024, 7, 25, 23, 0, 44, 930, DateTimeKind.Local).AddTicks(962)
                        });
                });

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.Todo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("TEXT")
                        .HasColumnName("deadline");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("member_id");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.Property<string>("TodoTypeId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("todo_type_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TodoTypeId");

                    b.ToTable("todos");
                });

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.TodoType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("todo_types");

                    b.HasData(
                        new
                        {
                            Id = "2624aa01-fc01-451e-9022-7725105f9689",
                            CreatedAt = new DateTime(2024, 7, 25, 23, 0, 44, 930, DateTimeKind.Local).AddTicks(1132),
                            Name = "プライベート",
                            UpdatedAt = new DateTime(2024, 7, 25, 23, 0, 44, 930, DateTimeKind.Local).AddTicks(1134)
                        },
                        new
                        {
                            Id = "38226631-23b7-4b80-ac5d-e5aad89b11c4",
                            CreatedAt = new DateTime(2024, 7, 25, 23, 0, 44, 930, DateTimeKind.Local).AddTicks(1138),
                            Name = "仕事",
                            UpdatedAt = new DateTime(2024, 7, 25, 23, 0, 44, 930, DateTimeKind.Local).AddTicks(1139)
                        });
                });

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.Todo", b =>
                {
                    b.HasOne("DDDSampleApp.Infrastructure.Models.Member", "Member")
                        .WithMany("Todos")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDDSampleApp.Infrastructure.Models.TodoType", "TodoType")
                        .WithMany()
                        .HasForeignKey("TodoTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("TodoType");
                });

            modelBuilder.Entity("DDDSampleApp.Infrastructure.Models.Member", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
